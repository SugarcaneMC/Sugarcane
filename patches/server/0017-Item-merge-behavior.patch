From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: The Arcane Brony <myrainbowdash949@gmail.com>
Date: Sun, 26 Jun 2022 19:04:45 +0200
Subject: [PATCH] Item merge behavior

fixup! Item merge behavior

fixup! Item merge behavior

diff --git a/src/main/java/net/minecraft/network/FriendlyByteBuf.java b/src/main/java/net/minecraft/network/FriendlyByteBuf.java
index 35377576ed182814051c11f902e02e8e921e84e3..3f8c905757a3a10c12172c1b8eebd99f76897d11 100644
--- a/src/main/java/net/minecraft/network/FriendlyByteBuf.java
+++ b/src/main/java/net/minecraft/network/FriendlyByteBuf.java
@@ -573,7 +573,7 @@ public class FriendlyByteBuf extends ByteBuf {
             Item item = stack.getItem();
 
             this.writeId(Registry.ITEM, item);
-            this.writeByte(stack.getCount());
+            this.writeByte(Math.min(stack.getCount(), 127));
             CompoundTag nbttagcompound = null;
 
             if (item.canBeDepleted() || item.shouldOverrideMultiplayerNbt()) {
diff --git a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
index 99176a781a5e375c71197546222e2b6f85544f47..5e0316329fff6c4729eac14ed7358ec285788b2f 100644
--- a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
+++ b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
@@ -120,6 +120,7 @@ public class ItemEntity extends Entity {
             this.discard();
         } else {
             super.tick();
+            org.sugarcanemc.sugarcane.feature.ItemMergeBehavior.TickItem(this);
             // CraftBukkit start - Use wall time for pickup and despawn timers
             int elapsedTicks = MinecraftServer.currentTick - this.lastTick;
             if (this.pickupDelay != 32767) this.pickupDelay -= elapsedTicks;
@@ -241,6 +242,10 @@ public class ItemEntity extends Entity {
 
     private void mergeWithNeighbours() {
         if (this.isMergable()) {
+            // Paper start - avoid item merge if stack size above max stack size
+            ItemStack stack = getItem();
+            if (stack.getCount() >= stack.getMaxStackSize() && org.sugarcanemc.sugarcane.config.SugarcaneConfig.ItemMergeBehavior != 0) return; // Sugarcane - add exception for infinite stacking mode
+            // Paper end
             // Spigot start
             double radius = level.spigotConfig.itemMerge;
             List<ItemEntity> list = this.level.getEntitiesOfClass(ItemEntity.class, this.getBoundingBox().inflate(radius, radius - 0.5D, radius), (entityitem) -> {
@@ -279,8 +284,7 @@ public class ItemEntity extends Entity {
 
     private boolean isMergable() {
         ItemStack itemstack = this.getItem();
-
-        return this.isAlive() && this.pickupDelay != 32767 && this.age != -32768 && this.age < this.despawnRate && itemstack.getCount() < itemstack.getMaxStackSize(); // Paper - respect despawn rate in pickup check.
+        return org.sugarcanemc.sugarcane.feature.ItemMergeBehavior.IsItemEntityMergable(this, itemstack);
     }
 
     private void tryToMerge(ItemEntity other) {
@@ -298,11 +302,11 @@ public class ItemEntity extends Entity {
     }
 
     public static boolean areMergable(ItemStack stack1, ItemStack stack2) {
-        return !stack2.is(stack1.getItem()) ? false : (stack2.getCount() + stack1.getCount() > stack2.getMaxStackSize() ? false : (stack2.hasTag() ^ stack1.hasTag() ? false : !stack2.hasTag() || stack2.getTag().equals(stack1.getTag())));
+        return org.sugarcanemc.sugarcane.feature.ItemMergeBehavior.AreItemEntitiesMergable(stack1, stack2);
     }
 
     public static ItemStack merge(ItemStack stack1, ItemStack stack2, int maxCount) {
-        int j = Math.min(Math.min(stack1.getMaxStackSize(), maxCount) - stack1.getCount(), stack2.getCount());
+        int j = org.sugarcanemc.sugarcane.feature.ItemMergeBehavior.GetMergeTargetCount(stack1, stack2, maxCount);
         ItemStack itemstack2 = stack1.copy();
 
         itemstack2.grow(j);
@@ -311,7 +315,7 @@ public class ItemEntity extends Entity {
     }
 
     private static void merge(ItemEntity targetEntity, ItemStack stack1, ItemStack stack2) {
-        ItemStack itemstack2 = ItemEntity.merge(stack1, stack2, 64);
+        ItemStack itemstack2 = org.sugarcanemc.sugarcane.feature.ItemMergeBehavior.MergeItemStacks(targetEntity, stack1, stack2);
 
         if (!itemstack2.isEmpty()) targetEntity.setItem(itemstack2); // CraftBukkit - don't set empty stacks
     }
@@ -383,6 +387,7 @@ public class ItemEntity extends Entity {
         }
 
         if (!this.getItem().isEmpty()) {
+            org.sugarcanemc.sugarcane.feature.ItemMergeBehavior.SplitItemStacksForSave(this);
             nbt.put("Item", this.getItem().save(new CompoundTag()));
         }
 
@@ -415,6 +420,7 @@ public class ItemEntity extends Entity {
 
     @Override
     public void playerTouch(Player player) {
+        org.sugarcanemc.sugarcane.feature.ItemMergeBehavior.HandlePlayerTouch(this, player); if(true) return;
         if (!this.level.isClientSide) {
             ItemStack itemstack = this.getItem();
             Item item = itemstack.getItem();
